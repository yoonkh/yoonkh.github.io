---
layout: post
title:  "파이썬을 여행하는 히치하이커를 위한 안내서 - 1장 인터프리터 선택하기"
date:   2017-12-15
author: Yoonkh
categories: Python
tags:	Python
comments: True
---


# 파이썬을 여행하는 히치하이커를 위한 안내서 

## 들어가기

### 인터프리터 언어 선택하기

#### 파이썬 2와 3 중 어느 버전을 선택할까?

파이썬 버전에 관한 몇 가지 사실 

- 오랜 시간 동안 파이썬 2.7이 표준이었다.
- 파이썬 3에서 많은 변화가 생겼고, 일부 개발자들은 이러한 변화 때문에 불행해졌다.
- 파이썬 2.7의 필수 보안 업데이트는 2020년까지 지속될 것이다.
- 파이썬 3는 파이썬 2가 지난 몇 년간 그래왔듯이 끊임없이 진화하고 있다.

#### 추천하는 파이썬 버전

**파이썬 3를 사용할 사람**

- 파이썬 3를 사랑한다.
- 어떤 버전을 사용할지 모르겠다.
- 변화를 좋아한다.

**파이썬 2를 사용할 사람**

- 파이썬 2를 사랑하며, 대다수가 파이썬 3를 사용할 미래를 떠올리면서 슬프다.
- 파이썬 3를 사용하면, 소프웨어의 안정성 요구사항이 영향을 받는다.
- 의존한느 소프트웨어가 파이썬 2를 필요로 한다.

### 파이썬 3가 최선일까?

### 구현 

사람들이 **파이썬**에 대해 얘기할 때, 파이썬 언어 자체를 언급하는 경우가 대다수지만 가끔 C파이썬 구현체(implementation)를 지칭하기도 한다. 실제로 파이썬은 다양한 방식으로 구현될 수 있다.

- **C파이썬**

	- C파이썬(CPython)은 파이썬의 표준 구현이며 C언어로 작성되었다. C파이썬은 파이썬 코드를 중간 바이트코드로 컴파일하고, 그 결과를 가상머신이 해석한다. C파이썬은 파이썬 패키지, C 확장 모듈과 호환성이 가장 높다.

- **스택리스**

	- 스택리스 파이썬(Stackless Python)은 보통의 C파이썬이며, C파이썬에서 사용 가능한 모든 라이브러리를 사용 할 수 있다. 그러나 파이썬 인터프리터를 호출 스택과 분리함으로써 코드 실행 순서를 변경할 수 있는 기능이 있다. 스택리스는 태스크릿(tasklet)이라는 콘셉트를 도입하여 함수를 감싸 '마이크로스레드(Microthread)로 바꾼다.

- **파이파이**

	- 파이파이(PyPy)는 파이썬 언어의 정적 타입 부분 집합인 RPython을 사용해 구현되었으며, 특정 종류의 최적화가 가능하다.
	
- **자이썬**

	- 자이썬(Jython)은 파이썬 코드를 자바 바이트코드로 컴파일하는 파이썬 인터프리터 구현이며, 컴파일 결과는 자바 가상머신에서 실행 될 수 있다. 자바 클래스를 파이썬 모듈 불러오듯 가져와 사용할 수도 있다.
	
- **아이언파이썬**

	- 아이언 파이썬(IronPython)은 닷넷(.NET) 프레임워크를 위한 파이썬 구현이다. 여기서는 파이썬 라이브러리와 닷넷 프레임워크 라이브러리를 모두 사용할 수 있으며, 파이썬 코드를 다른 닷넷 프레임워크 언어에 노출 시킬 수 있다.
	
- **파이썬넷**

	- 파이썬넷(PythonNet)은 파이썬을 위한 닷넷(Python for .NET)의 줄임말로, 파이썬과 닷넷 CLR(Common Language Runtime, 공용 언어 런타임)을 매끄럽게 통합한 패키지이다.
	
- **스컬트**

	- 스컬트(Skulpt)는 파이썬을 자바스크립트로 구현한 것이다. C파이썬의 표준 라이브러리가 모두 포팅되지는 않았으며, math, random, turtle, image, unittest time의 일부, urllib, DOM, re가 포함되어 있다.
	
- **마이크로파이썬**
	- 마이크로파이썬(MicroPython)은 마이크로 컨트롤러에서 실행되도록 최적화된 파이썬 3의 구현이며, Thumb v2명령어를 사용하는 32비트 ARM프로세서를 지원한다.

### 파이썬 설치하기

#### 맥에 파이썬 설치하기

맥 운영체제 최신 버전에는 파이썬 2.7이 내장되어 있다. 따라서 맥에서는 파이썬을 별도로 설치하거나 설정할 필요가 없다.

**Setuptools와 pip**

홈브류는 파이썬과 함께 Setuptools와 pip도 설치한다. 설치된 pip 실행 파일은 파이썬 3 기준 pip3, 파이썬 2 기준 pip 명령어에 매핑된다.

**virtualenv**

virtualenv는 고립된 파이썬 환경을 생성한다. 환경마다 폴더를 하나씩 만들어, 환경 내에서 패키지를 사용하는데 필요한 모든 실행 파일을 담는다.

#### 상용 파이썬 재배포판

소속 부서나 수업에서 파이썬 상용 재배포판(commercial redistribution)을 설치하면, 최소한의 작업으로 모두가 일관된 환경을 사용할 수 있다. 이번 절에 나열된 재배포판은 모두 파이썬의 C 구현(C파이썬)이다.

- **인텔의 파이썬 배보판**

	- 인텔의 파이썬 배보판의 지향점은 누구나 무료의 고성능 파이썬을 경험하는 것이다. 인텔 수학 커널 라이브러리와 같은 기본 라이브러리를 파이썬 패키지와 연결하고, 인텔 스레딩 빌딩 블록(Threading Building Block, TBB) 라이브러리를 포함한 향상된 스레딩 기능을 제공하여 성능이 대폭 향상되었다. 

- **컨티넘 애널리틱스의 아나콘다**

	- 컨티넘 애널리틱스의 파이썬 배포판은 BSD 라이선스로 배포되고 있으며, 무료패키지 색인에 나열된 수많은 과학/수학 바이너리가 미리 컴파일되어 제공된다. pip와는 다른 콘다(Conda)라는 패키지 관리자가 있다. 이 도구를 사용해 가상 환경도 관리할 수 있지만 가상 환경보다는 Buildout과 같은 역할을 한다. 즉, 사용자를 위해 라이브러리와 외부 의존성을 관리한다. 패키지 형식이 호환되지 않으니, 다른 인스톨러의 패키지 색인에 등록된 패키지는 설치할 수 없다.

- **액티브스테이트의 액티브파이썬**

- **Enthought의 캐노피**



